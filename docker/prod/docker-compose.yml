version: '2'

volumes:
  postgres_data_prod: {}
  static_files_prod: {}

services:

  nginx:
    build:
      context: ../..
      dockerfile: docker/Dockerfile-nginx
    ports:
      - 0.0.0.0:443:443
    depends_on:
      - app
    restart: always
    volumes:
      - static_files_prod:/var/www/locations_collector/static/
      - /root/locations_collector/frontend/build:/var/www/locations_collector/frontend/
    command: >-
      /bin/sh -c "
      openssl des -d -in /var/www/locations_collector/certificate/nginx_priv.enc -out /var/www/locations_collector/certificate/nginx_priv -pass pass:${NGINX_CERT_PASSWORD} &&
      openssl des -d -in /var/www/locations_collector/certificate/nginx_pub.enc -out /var/www/locations_collector/certificate/nginx_pub -pass pass:${NGINX_CERT_PASSWORD} &&
      nginx -g 'daemon off;'"

  app:
    build:
      context: ../..
      dockerfile: docker/Dockerfile-app
    environment:
      - DATABASE_URL
      - SECRET_KEY
      - ALLOWED_HOSTS=*
      - DEBUG=false
    depends_on:
      - postgres
    restart: always
    volumes:
      - static_files_prod:/var/www/locations_collector/static/
    command: >-
      /bin/bash -c "
      cd /app/src/ &&
      echo "yes" | python manage.py collectstatic &&
      python manage.py migrate &&
      /app/wait-for.sh postgres:5432 --timeout=60 &&
      gunicorn -c gunicorn.conf.py wsgi"

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB